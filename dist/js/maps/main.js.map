{"version":3,"sources":["main.js"],"names":["Completer","guid","data","this","prototype","saveResults","callback","__tz","Date","getTimezoneOffset","$","post","cssOverrides","question","root","title","questionNumber","navigation","complete","prev","next","progress","progressBar","radiogroup","label","checkbox","other","HandleQuestionUpdate","surveyNode","each","find","index","value","qtype","attr","checked","parents","first","addClass","removeClass","document","ready","srvNd","srvB64","innerText","srvJSONStr","atob","srvMdl","JSON","parse","surveyId","Survey","defaultBootstrapCss","navigationButton","cssType","completedHtml","questionTitleTemplate","questionNoTemplate","survey","Model","showProgressBar","model","css","onValueChanged","onCurrentPageChanged","srv","setTimeout","onComplete","add","console","log"],"mappings":"AAKA,GAAIA,WAAY,SAASC,EAAMC,GAC3BC,KAAKF,KAAOA,EACZE,KAAKD,KAAOA,EAMhBF,WAAUI,UAAUC,YAAc,SAASC,GACvCH,KAAKD,KAAKK,MAAO,GAAIC,OAAOC,oBAC5BC,EAAEC,KAAK,MAAQR,KAAKF,KAAME,KAAKD,KAAM,cAQzC,IAAIU,eACFC,UACAC,KAAQ,WACRC,MAAS,SACTC,eAAkB,QAEnBC,YACCC,SAAY,qBACZC,KAAQ,iBACRC,KAAQ,kBAETC,SAAY,kBACZC,YAAe,sBACfC,YACCC,MAAS,mBAEVC,UACCD,MAAS,kBACTE,MAAS,YAKPC,qBAAuB,SAAUC,GACnClB,EAAEmB,KAAKD,EAAWE,KAAK,2CAA4C,SAAUC,EAAOC,GAClFA,EAAQtB,EAAEsB,EACV,IAAIC,GAAQD,EAAME,KAAK,OACTF,GAAM,GAAGG,SAGrBH,EAAMI,QAAQ,SAASC,QAAQC,SAAS,kBACxCN,EAAMI,QAAQ,OAASH,GAAOI,QAAQC,SAAS,aAE/CN,EAAMI,QAAQ,SAASC,QAAQE,YAAY,kBAC3CP,EAAMI,QAAQ,OAASH,GAAOI,QAAQE,YAAY,cAKxD7B,GAAE8B,UAAUC,MAAM,WACd,GAAIC,GAAQhC,EAAE,+BAAiC2B,QAAQ,EACvD,IAAKK,EAAL,CAGA,GAAIC,GAASD,EAAME,UACfC,EAAaC,KAAKH,GAClBI,EAASC,KAAKC,MAAMJ,GACpBjB,EAAalB,EAAE,kBACfwC,EAAWtB,EAAWM,KAAK,iBAC/BiB,QAAOC,oBAAoBC,iBAAmB,kBAC9CF,OAAOA,OAAOG,QAAU,YACxBP,EAAOQ,cAAgB,iCACvBR,EAAOS,sBAAwB,oBAC/BT,EAAOU,mBAAqB,MAE5B,IAAIC,GAAS,GAAIP,QAAOQ,MAAMZ,EAC9BW,GAAOE,gBAAkB,KAGzB,IAAI1D,KAWJ0B,GAAWuB,QACPU,MAASH,EACTxD,KAAQA,EACR4D,IAAOlD,aACPmD,eAAkB,WACdpC,qBAAqBC,IAEzBoC,qBAAwB,SAASC,GAC7BC,WAAW,WACPvC,qBAAqBC,IACtB,KAEPuC,WAAc,SAASF,GACnB,GAAKjE,WAAUkD,EAAUe,EAAI/D,MAAOG,iBAK5CqD,EAAOK,eAAeK,IAAI,WACtBC,QAAQC,IAAIvB,GACZ,GAAK/C,WAAUkD,EAAUQ,EAAOxD,MAAOG","file":"../main.js","sourcesContent":["/**\n * Does the work of transmitting data\n * @param {*} guid \n * @param {*} data \n */\nvar Completer = function(guid, data) {\n    this.guid = guid;\n    this.data = data;\n};\n\n/**\n * Save the results to the server\n */\nCompleter.prototype.saveResults = function(callback) {\n    this.data.__tz = new Date().getTimezoneOffset();\n    $.post('/s/' + this.guid, this.data, function() {\n\n    });\n};\n/**\n * The CSS overrides\n * Documentation: http://surveyjs.org/examples/jquery/survey-customcss.html\n */\nvar cssOverrides = {\n  \"question\": {\n\t\t\"root\": \"question\",\n\t\t\"title\": \"qtitle\",\n\t\t\"questionNumber\": \"qNum\"\n\t},\n\t\"navigation\": {\n\t\t\"complete\": \"navButton complete\",\n\t\t\"prev\": \"navButton prev\",\n\t\t\"next\": \"navButton next\"\n\t},\n\t\"progress\": \"survey-progress\",\n\t\"progressBar\": \"survey-progress-bar\",\n\t\"radiogroup\": {\n\t\t\"label\": \"btn btn-default\"\n\t},\n\t\"checkbox\": {\n\t\t\"label\": \"btn btn-default\",\n\t\t\"other\": \"otherCb\"\n\t}\n};\n// Controls dynamic behaviors in the survey\n\nvar HandleQuestionUpdate = function (surveyNode) {\n  $.each(surveyNode.find(\"input[type=checkbox], input[type=radio]\"), function (index, value) {\n    value = $(value);\n    var qtype = value.attr(\"type\"),\n      isChecked = value[0].checked;\n      \n    if (isChecked) {\n      value.parents(\"label\").first().addClass(\"checked active\");\n      value.parents(\"div.\" + qtype).first().addClass(\"checked\");\n    } else {\n      value.parents(\"label\").first().removeClass(\"checked active\");\n      value.parents(\"div.\" + qtype).first().removeClass(\"checked\");\n    }\n  });\n};\n// Start on domready\n$(document).ready(function() {\n    var srvNd = $(\"script[type=\\\"finer/survey\\\"]\").first()[0];\n    if (!srvNd) {\n        return;\n    }\n    var srvB64 = srvNd.innerText,\n        srvJSONStr = atob(srvB64),\n        srvMdl = JSON.parse(srvJSONStr),\n        surveyNode = $(\"#surveyElement\"),\n        surveyId = surveyNode.attr(\"data-survey-id\");\n    Survey.defaultBootstrapCss.navigationButton = \"btn btn-primary\";\n    Survey.Survey.cssType = \"bootstrap\";\n    srvMdl.completedHtml = \"<div class=\\\"completion\\\"></div>\";\n    srvMdl.questionTitleTemplate = \"{title} {require}\";\n    srvMdl.questionNoTemplate = \"{no}\";\n\n    var survey = new Survey.Model(srvMdl);\n    survey.showProgressBar = \"top\";\n    //survey.showQuestionNumbers = false;\n\n    var data = {\n        // Meta data goes here\n    };\n    var surveyValueChanged = function(sender, options) {\n        var el = document.getElementById(options.name);\n        if (el) {\n            el.value = options.value;\n        }\n    };\n\n    // Bind to the survey node\n    surveyNode.Survey({\n        \"model\": survey,\n        \"data\": data,\n        \"css\": cssOverrides,\n        \"onValueChanged\": function() {\n            HandleQuestionUpdate(surveyNode);\n        },\n        \"onCurrentPageChanged\": function(srv) {\n            setTimeout(function() {\n                HandleQuestionUpdate(surveyNode);\n            }, 20);\n        },\n        \"onComplete\": function(srv) {\n            (new Completer(surveyId, srv.data)).saveResults();\n        }\n    });\n\n    // Send data periodically\n    survey.onValueChanged.add(function() {\n        console.log(srvMdl);\n        (new Completer(surveyId, survey.data)).saveResults();\n    });\n\n});"]}